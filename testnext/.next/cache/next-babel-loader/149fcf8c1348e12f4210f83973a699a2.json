{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { useCookies, withCookies, Cookies } from \"react-cookie\";\nimport App from \"next/app\"; // const MyApp = ({Component, pageProps}) => {\n//   const [cookie, setCookie, removeCookie] = useCookies('test-cookie')\n//   const [user, setUser] = useState(undefined)\n//   //const [user, setUser] = useState(cookie.user || undefined)\n//   //if (!user && cookie.user) setUser(cookie.user)\n//   return <Component {...pageProps} user={user} setUser={setUser} cookie={cookie} setCookie={setCookie} removeCookie={removeCookie}/>\n// }\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: undefined\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.props.cookies); //if (!user && this.props.cookies.user) setUser()\n  }\n\n  render() {\n    __jsx(Component, _extends({}, pageProps, {\n      user: user,\n      setUser: setUser,\n      cookie: cookie,\n      setCookie: setCookie,\n      removeCookie: removeCookie\n    }));\n  }\n\n} // MyApp.getInitialProps = async ({Component, ctx}) => {\n//   let pageProps = {}\n//   if (Component.getInitialProps) pageProps = await Component.getInitialProps(ctx)\n//   return {pageProps: {...pageProps, session: ctx.req.session, sessionID: ctx.req.sessionID}}\n// }\n\n\nexport default withCookies(MyApp);","map":{"version":3,"sources":["C:/Code/js/testnext/pages/_app.js"],"names":["useState","useCookies","withCookies","Cookies","App","MyApp","user","undefined","componentDidMount","console","log","props","cookies","render","pageProps","setUser","cookie","setCookie","removeCookie"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,OAAlC,QAAiD,cAAjD;AACA,OAAOC,GAAP,MAAgB,UAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAN,SAAoBD,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCACd;AACNE,MAAAA,IAAI,EAAEC;AADA,KADc;AAAA;;AAKtBC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAvB,EADkB,CAElB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAC,SAAD,eAAeC,SAAf;AAA0B,MAAA,IAAI,EAAER,IAAhC;AAAsC,MAAA,OAAO,EAAES,OAA/C;AAAwD,MAAA,MAAM,EAAEC,MAAhE;AAAwE,MAAA,SAAS,EAAEC,SAAnF;AAA8F,MAAA,YAAY,EAAEC;AAA5G;AACD;;AAZqB,C,CAexB;AACA;AAEA;AAEA;AACA;;;AAEA,eAAehB,WAAW,CAACG,KAAD,CAA1B","sourcesContent":["import { useState } from \"react\"\r\nimport { useCookies, withCookies, Cookies } from \"react-cookie\"\r\nimport App from \"next/app\"\r\n\r\n// const MyApp = ({Component, pageProps}) => {\r\n//   const [cookie, setCookie, removeCookie] = useCookies('test-cookie')\r\n//   const [user, setUser] = useState(undefined)\r\n//   //const [user, setUser] = useState(cookie.user || undefined)\r\n//   //if (!user && cookie.user) setUser(cookie.user)\r\n//   return <Component {...pageProps} user={user} setUser={setUser} cookie={cookie} setCookie={setCookie} removeCookie={removeCookie}/>\r\n// }\r\n\r\nclass MyApp extends App {\r\n  state = {\r\n    user: undefined\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.cookies)\r\n    //if (!user && this.props.cookies.user) setUser()\r\n  }\r\n\r\n  render() {\r\n    <Component {...pageProps} user={user} setUser={setUser} cookie={cookie} setCookie={setCookie} removeCookie={removeCookie}/>\r\n  }\r\n}\r\n\r\n// MyApp.getInitialProps = async ({Component, ctx}) => {\r\n//   let pageProps = {}\r\n\r\n//   if (Component.getInitialProps) pageProps = await Component.getInitialProps(ctx)\r\n  \r\n//   return {pageProps: {...pageProps, session: ctx.req.session, sessionID: ctx.req.sessionID}}\r\n// }\r\n\r\nexport default withCookies(MyApp)"]},"metadata":{},"sourceType":"module"}