{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { NoSsr, TextField, Typography, Avatar, IconButton, Button, InputAdornment } from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport TTMLogo from \"../components/TTMTechnologiesLogo\";\nimport BasicLayout from \"../components/BasicLayout\";\nimport \"./LoginPage.scss\";\n\nconst LoginPage = ({\n  login,\n  logout,\n  user\n}) => {\n  //------------------------- Initialize Component -----------------------------\n  const {\n    0: username,\n    1: setUsername\n  } = useState(0);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(0);\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(0);\n  const inputRefs = {};\n\n  const focusNextInput = () => {\n    if (!validUsername().valid) inputRefs.username.focus();else if (!validPassword().valid) inputRefs.password.focus();\n  };\n\n  const validUsername = () => username.length > 0 ? {\n    valid: true\n  } : {\n    err: \"Please enter a valid username (1 or more characters)\"\n  };\n\n  const validPassword = () => password.length > 3 ? {\n    valid: true\n  } : {\n    err: \"Please enter a valid username (4 or more characters)\"\n  };\n\n  const validInput = validUsername().valid && validPassword().valid;\n\n  const handleChange = event => {\n    const {\n      target: {\n        id,\n        value\n      }\n    } = event;\n    if (id === \"username\") setUsername(value);\n    if (id === \"password\") setPassword(value);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") validInput ? login(username, password) : focusNextInput();\n  };\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword); //-------------------------------- Render ------------------------------------\n\n\n  return __jsx(BasicLayout, {\n    user: user,\n    logout: logout\n  }, __jsx(\"div\", {\n    className: \"LoginPage\"\n  }, __jsx(NoSsr, null, __jsx(TTMLogo, {\n    style: {\n      height: \"84px\",\n      width: \"500px\",\n      maxWidth: \"100%\",\n      margin: \"auto auto 30px auto\"\n    }\n  }), __jsx(Avatar, null, \" \", __jsx(LockOutlinedIcon, null), \" \"), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    style: {\n      textAlign: \"center\",\n      margin: \"8px 0px 38px 0px\"\n    }\n  }, \" CAM Login \"), __jsx(TextField, {\n    value: username,\n    id: \"username\",\n    inputRef: ref => {\n      inputRefs.username = ref;\n    },\n    label: \"Enter Username\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    autoComplete: \"username\",\n    autoFocus: true,\n    required: true,\n    onKeyDown: handleKeyDown,\n    onChange: handleChange,\n    style: {\n      backgroundColor: \"white\",\n      margin: \"5px\",\n      width: \"250px\"\n    }\n  }), __jsx(TextField, {\n    value: password,\n    id: \"password\",\n    inputRef: ref => {\n      inputRefs.password = ref;\n    },\n    label: \"Enter Password\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    autoComplete: \"password\",\n    required: true,\n    onKeyDown: handleKeyDown,\n    onChange: handleChange,\n    InputProps: {\n      type: showPassword ? \"text\" : \"password\",\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(IconButton, {\n        onClick: handleClickShowPassword\n      }, showPassword ? __jsx(Visibility, null) : __jsx(VisibilityOff, null)))\n    },\n    style: {\n      backgroundColor: \"white\",\n      margin: \"5px\",\n      width: \"250px\"\n    }\n  }), __jsx(Button, {\n    id: \"login\",\n    color: \"primary\",\n    variant: \"contained\",\n    disabled: !validUsername().valid || !validPassword().valid,\n    onClick: () => login(username, password),\n    style: {\n      margin: \"8px 5px 8px 5px\",\n      width: \"250px\"\n    }\n  }, \" Login \"), __jsx(\"div\", {\n    className: \"Links\"\n  }, __jsx(\"a\", {\n    href: \"/\"\n  }, \"Register\"), __jsx(\"a\", {\n    href: \"/\"\n  }, \"Forgot Password\")))));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Code/js/testnext/components/LoginPage.js"],"names":["useState","NoSsr","TextField","Typography","Avatar","IconButton","Button","InputAdornment","LockOutlinedIcon","Visibility","VisibilityOff","TTMLogo","BasicLayout","LoginPage","login","logout","user","username","setUsername","password","setPassword","showPassword","setShowPassword","inputRefs","focusNextInput","validUsername","valid","focus","validPassword","length","err","validInput","handleChange","event","target","id","value","handleKeyDown","key","handleClickShowPassword","height","width","maxWidth","margin","textAlign","ref","backgroundColor","type","endAdornment"],"mappings":"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","sourcesContent":["import {useState} from \"react\"\r\nimport { NoSsr, TextField, Typography, Avatar, IconButton, Button, InputAdornment } from \"@material-ui/core\"\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\r\nimport Visibility from \"@material-ui/icons/Visibility\"\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\"\r\nimport TTMLogo from \"../components/TTMTechnologiesLogo\"\r\nimport BasicLayout from \"../components/BasicLayout\"\r\nimport \"./LoginPage.scss\"\r\n\r\nconst LoginPage = ({login, logout, user}) => {\r\n  //------------------------- Initialize Component -----------------------------\r\n  const [username, setUsername] = useState(0)\r\n  const [password, setPassword] = useState(0)\r\n  const [showPassword, setShowPassword] = useState(0)\r\n  const inputRefs = {}\r\n\r\n  const focusNextInput = () => {\r\n    if (!validUsername().valid) inputRefs.username.focus()\r\n    else if (!validPassword().valid) inputRefs.password.focus()\r\n  }\r\n\r\n  const validUsername = () => username.length > 0\r\n    ? {valid: true}\r\n    : {err: \"Please enter a valid username (1 or more characters)\"}\r\n\r\n  const validPassword = () => password.length > 3\r\n    ? {valid: true}\r\n    : {err: \"Please enter a valid username (4 or more characters)\"}\r\n\r\n  const validInput = validUsername().valid && validPassword().valid\r\n\r\n  const handleChange = event => {\r\n    const { target: { id, value } } = event\r\n    if (id === \"username\") setUsername(value)\r\n    if (id === \"password\") setPassword(value)\r\n  }\r\n\r\n  const handleKeyDown = event => { if (event.key === \"Enter\")\r\n    validInput ? login(username, password) : focusNextInput()\r\n  }\r\n\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword)\r\n\r\n  //-------------------------------- Render ------------------------------------\r\n  return <BasicLayout user={user} logout={logout}>\r\n    <div className=\"LoginPage\">  \r\n      <NoSsr>\r\n\r\n        <TTMLogo style={{\r\n          height: \"84px\",\r\n          width: \"500px\",\r\n          maxWidth: \"100%\",\r\n          margin: \"auto auto 30px auto\"\r\n        }}/>\r\n\r\n        <Avatar> <LockOutlinedIcon/> </Avatar>\r\n\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h5\"\r\n          style={{ textAlign: \"center\", margin: \"8px 0px 38px 0px\" }}\r\n        > CAM Login </Typography>\r\n\r\n        <TextField\r\n          value={username}\r\n          id=\"username\"\r\n          inputRef={ref => { inputRefs.username = ref }}\r\n          label=\"Enter Username\"\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          autoComplete=\"username\"\r\n          autoFocus\r\n          required\r\n          onKeyDown={handleKeyDown}\r\n          onChange={handleChange}\r\n          style={{ backgroundColor: \"white\", margin:\"5px\", width: \"250px\" }}\r\n        />\r\n\r\n        <TextField\r\n          value={password}\r\n          id=\"password\"\r\n          inputRef={ref => { inputRefs.password = ref }}\r\n          label=\"Enter Password\"\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          autoComplete=\"password\"\r\n          required\r\n          onKeyDown={handleKeyDown}\r\n          onChange={handleChange}\r\n          InputProps={{ type: showPassword ? \"text\" : \"password\",\r\n            endAdornment: <InputAdornment position=\"end\">\r\n              <IconButton onClick={handleClickShowPassword}>\r\n                {showPassword ? <Visibility/>: <VisibilityOff/>}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }}\r\n          style={{ backgroundColor: \"white\", margin:\"5px\", width: \"250px\" }}\r\n        />\r\n        \r\n        <Button\r\n          id=\"login\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          disabled={!validUsername().valid || !validPassword().valid}\r\n          onClick={() => (login(username, password))}\r\n          style={{ margin:\"8px 5px 8px 5px\", width: \"250px\" }}\r\n        > Login </Button>\r\n\r\n        <div className=\"Links\">\r\n          <a href=\"/\">Register</a>\r\n          <a href=\"/\">Forgot Password</a>\r\n        </div>\r\n\r\n      </NoSsr>\r\n    </div>\r\n  </BasicLayout>\r\n}\r\n\r\nexport default LoginPage"]},"metadata":{},"sourceType":"module"}