{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\js\\\\testnext\\\\components\\\\NavBar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./NavBar.scss\";\n\nconst NavBar = props => {\n  const [username, setUsername] = useState(0);\n  const [password, setPassword] = useState(0);\n  const [showPassword, setShowPassword] = useState(0);\n\n  const validUsername = () => username.length > 0 ? {\n    valid: true\n  } : {\n    err: \"Please enter a valid username (1 or more characters)\"\n  };\n\n  const validPassword = () => password.length > 3 ? {\n    valid: true\n  } : {\n    err: \"Please enter a valid username (4 or more characters)\"\n  };\n\n  const validInput = validUsername().valid && validPassword().valid;\n  const inputRefs = {};\n\n  const handleChange = event => {\n    const {\n      target: {\n        id,\n        value\n      }\n    } = event;\n    if (id === \"username\") setUsername(value);\n    if (id === \"password\") setPassword(value);\n  };\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n\n  return __jsx(\"div\", {\n    className: \"NavBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"username\",\n    inputRef: ref => {\n      inputRefs.username = ref;\n    },\n    label: \"Enter Username\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    autoComplete: \"username\",\n    autoFocus: true,\n    required: true,\n    onKeyDown: handleKeyDown,\n    onChange: handleChange,\n    style: {\n      backgroundColor: \"white\",\n      margin: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(TextField, {\n    id: \"password\",\n    inputRef: ref => {\n      inputRefs.password = ref;\n    },\n    label: \"Enter Password\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    autoComplete: \"password\",\n    required: true,\n    onKeyDown: handleKeyDown,\n    onChange: handleChange,\n    InputProps: {\n      type: showPassword ? \"text\" : \"password\",\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, __jsx(IconButton, {\n        onClick: handleClickShowPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, showPassword ? __jsx(Visibility, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }) : __jsx(VisibilityOff, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })))\n    },\n    style: {\n      backgroundColor: \"white\",\n      margin: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(Button, {\n    id: \"login\",\n    color: \"primary\",\n    variant: \"contained\",\n    disabled: !validUsername().valid || !validPassword().valid,\n    onClick: () => props.login(username, password),\n    style: {\n      margin: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \" Login \"));\n};\n\nexport default NavBar;","map":{"version":3,"sources":["C:/Code/js/testnext/components/NavBar.js"],"names":["TextField","InputAdornment","LockOutlinedIcon","IconButton","Visibility","VisibilityOff","Button","NavBar","props","username","setUsername","useState","password","setPassword","showPassword","setShowPassword","validUsername","length","valid","err","validPassword","validInput","inputRefs","handleChange","event","target","id","value","handleClickShowPassword","ref","handleKeyDown","backgroundColor","margin","type","endAdornment","login"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,eAAP;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BF,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,CAAD,CAAhD;;AAEA,QAAMK,aAAa,GAAG,MAAMP,QAAQ,CAACQ,MAAT,GAAkB,CAAlB,GACxB;AAACC,IAAAA,KAAK,EAAE;AAAR,GADwB,GAExB;AAACC,IAAAA,GAAG,EAAE;AAAN,GAFJ;;AAIA,QAAMC,aAAa,GAAG,MAAMR,QAAQ,CAACK,MAAT,GAAkB,CAAlB,GACxB;AAACC,IAAAA,KAAK,EAAE;AAAR,GADwB,GAExB;AAACC,IAAAA,GAAG,EAAE;AAAN,GAFJ;;AAIA,QAAME,UAAU,GAAGL,aAAa,GAAGE,KAAhB,IAAyBE,aAAa,GAAGF,KAA5D;AAEA,QAAMI,SAAS,GAAG,EAAlB;;AAEA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,UAAM;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN;AAAV,QAA4BH,KAAlC;AACA,QAAIE,EAAE,KAAK,UAAX,EAAuBhB,WAAW,CAACiB,KAAD,CAAX;AACvB,QAAID,EAAE,KAAK,UAAX,EAAuBb,WAAW,CAACc,KAAD,CAAX;AACxB,GAJD;;AAMA,QAAMC,uBAAuB,GAAG,MAAMb,eAAe,CAAC,CAACD,YAAF,CAArD;;AAEA,SAAO;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,QAAQ,EAAEe,GAAG,IAAI;AAAEP,MAAAA,SAAS,CAACb,QAAV,GAAqBoB,GAArB;AAA0B,KAF/C;AAGE,IAAA,KAAK,EAAC,gBAHR;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,MAAM,EAAC,OALT;AAME,IAAA,YAAY,EAAC,UANf;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,QAAQ,MARV;AASE,IAAA,SAAS,EAAEC,aATb;AAUE,IAAA,QAAQ,EAAEP,YAVZ;AAWE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,MAAM,EAAC;AAAnC,KAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAeL,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,QAAQ,EAAEH,GAAG,IAAI;AAAEP,MAAAA,SAAS,CAACV,QAAV,GAAqBiB,GAArB;AAA0B,KAF/C;AAGE,IAAA,KAAK,EAAC,gBAHR;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,MAAM,EAAC,OALT;AAME,IAAA,YAAY,EAAC,UANf;AAOE,IAAA,QAAQ,MAPV;AAQE,IAAA,SAAS,EAAEC,aARb;AASE,IAAA,QAAQ,EAAEP,YATZ;AAUE,IAAA,UAAU,EAAE;AAAEU,MAAAA,IAAI,EAAEnB,YAAY,GAAG,MAAH,GAAY,UAAhC;AACZoB,MAAAA,YAAY,EACV,MAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAY,QAAA,OAAO,EAAEN,uBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGd,YAAY,GAAG,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAmB,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADlC,CADF;AAFU,KAVd;AAmBE,IAAA,KAAK,EAAE;AAAEiB,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,MAAM,EAAC;AAAnC,KAnBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfK,EAqCL,MAAC,MAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,QAAQ,EAAE,CAAChB,aAAa,GAAGE,KAAjB,IAA0B,CAACE,aAAa,GAAGF,KAJvD;AAKE,IAAA,OAAO,EAAE,MAAMV,KAAK,CAAC2B,KAAN,CAAY1B,QAAZ,EAAsBG,QAAtB,CALjB;AAME,IAAA,KAAK,EAAE;AAAEoB,MAAAA,MAAM,EAAC;AAAT,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eArCK,CAAP;AA+CD,CAxED;;AA0EA,eAAezB,MAAf","sourcesContent":["import TextField from \"@material-ui/core/TextField\"\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Visibility from \"@material-ui/icons/Visibility\"\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport \"./NavBar.scss\"\r\n\r\nconst NavBar = props => {\r\n  const [username, setUsername] = useState(0)\r\n  const [password, setPassword] = useState(0)\r\n  const [showPassword, setShowPassword] = useState(0)\r\n\r\n  const validUsername = () => username.length > 0\r\n    ? {valid: true}\r\n    : {err: \"Please enter a valid username (1 or more characters)\"}\r\n\r\n  const validPassword = () => password.length > 3\r\n    ? {valid: true}\r\n    : {err: \"Please enter a valid username (4 or more characters)\"}\r\n\r\n  const validInput = validUsername().valid && validPassword().valid\r\n\r\n  const inputRefs = {}\r\n\r\n  const handleChange = event => {\r\n    const { target: { id, value } } = event\r\n    if (id === \"username\") setUsername(value)\r\n    if (id === \"password\") setPassword(value)\r\n  }\r\n\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword)\r\n\r\n  return <div className=\"NavBar\">\r\n    <TextField\r\n      id=\"username\"\r\n      inputRef={ref => { inputRefs.username = ref }}\r\n      label=\"Enter Username\"\r\n      variant=\"outlined\"\r\n      margin=\"dense\"\r\n      autoComplete=\"username\"\r\n      autoFocus\r\n      required\r\n      onKeyDown={handleKeyDown}\r\n      onChange={handleChange}\r\n      style={{ backgroundColor: \"white\", margin:\"5px\" }}\r\n    />\r\n\r\n    <TextField\r\n      id=\"password\"\r\n      inputRef={ref => { inputRefs.password = ref }}\r\n      label=\"Enter Password\"\r\n      variant=\"outlined\"\r\n      margin=\"dense\"\r\n      autoComplete=\"password\"\r\n      required\r\n      onKeyDown={handleKeyDown}\r\n      onChange={handleChange}\r\n      InputProps={{ type: showPassword ? \"text\" : \"password\",\r\n      endAdornment: (\r\n        <InputAdornment position=\"end\">\r\n          <IconButton onClick={handleClickShowPassword}>\r\n            {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n          </IconButton>\r\n        </InputAdornment>\r\n      )\r\n      }}\r\n      style={{ backgroundColor: \"white\", margin:\"5px\" }}\r\n    />\r\n\r\n    <Button\r\n      id=\"login\"\r\n      color=\"primary\"\r\n      variant=\"contained\"\r\n      disabled={!validUsername().valid || !validPassword().valid}\r\n      onClick={() => props.login(username, password)}\r\n      style={{ margin:\"5px\" }}\r\n    > Login </Button>\r\n\r\n  </div>\r\n}\r\n\r\nexport default NavBar"]},"metadata":{},"sourceType":"module"}