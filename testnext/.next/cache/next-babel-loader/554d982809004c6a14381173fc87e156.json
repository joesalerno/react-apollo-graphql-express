{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { useCookies, withCookies, Cookies } from \"react-cookie\";\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const [cookie, setCookie, removeCookie] = useCookies('test-cookie');\n  const {\n    0: user,\n    1: setUser\n  } = useState(undefined); //const [user, setUser] = useState(cookie.user || undefined)\n  //if (!user && cookie.user) setUser(cookie.user)\n\n  return __jsx(Component, _extends({}, pageProps, {\n    user: user,\n    setUser: setUser,\n    cookie: cookie,\n    setCookie: setCookie,\n    removeCookie: removeCookie\n  }));\n}; // class MyApp extends App {\n//   state = {\n//     user: undefined\n//   }\n//   componentDidMount() {\n//     console.log(this.props.cookies)\n//     //if (!user && this.props.cookies.user) setUser()\n//   }\n//   render() {\n//     <Component {...pageProps} user={user} setUser={setUser} cookie={cookie} setCookie={setCookie} removeCookie={removeCookie}/>\n//   }\n// }\n// MyApp.getInitialProps = async ({Component, ctx}) => {\n//   let pageProps = {}\n//   if (Component.getInitialProps) pageProps = await Component.getInitialProps(ctx)\n//   return {pageProps: {...pageProps, session: ctx.req.session, sessionID: ctx.req.sessionID}}\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Code/js/testnext/pages/_app.js"],"names":["useState","useCookies","withCookies","Cookies","MyApp","Component","pageProps","cookie","setCookie","removeCookie","user","setUser","undefined"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,OAAlC,QAAiD,cAAjD;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AACxC,QAAM,CAACC,MAAD,EAASC,SAAT,EAAoBC,YAApB,IAAoCR,UAAU,CAAC,aAAD,CAApD;AACA,QAAM;AAAA,OAACS,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAACY,SAAD,CAAhC,CAFwC,CAGxC;AACA;;AACA,SAAO,MAAC,SAAD,eAAeN,SAAf;AAA0B,IAAA,IAAI,EAAEI,IAAhC;AAAsC,IAAA,OAAO,EAAEC,OAA/C;AAAwD,IAAA,MAAM,EAAEJ,MAAhE;AAAwE,IAAA,SAAS,EAAEC,SAAnF;AAA8F,IAAA,YAAY,EAAEC;AAA5G,KAAP;AACD,CAND,C,CAQA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;;AAEA,eAAeL,KAAf","sourcesContent":["import { useState } from \"react\"\r\nimport { useCookies, withCookies, Cookies } from \"react-cookie\"\r\n\r\nconst MyApp = ({Component, pageProps}) => {\r\n  const [cookie, setCookie, removeCookie] = useCookies('test-cookie')\r\n  const [user, setUser] = useState(undefined)\r\n  //const [user, setUser] = useState(cookie.user || undefined)\r\n  //if (!user && cookie.user) setUser(cookie.user)\r\n  return <Component {...pageProps} user={user} setUser={setUser} cookie={cookie} setCookie={setCookie} removeCookie={removeCookie}/>\r\n}\r\n\r\n// class MyApp extends App {\r\n//   state = {\r\n//     user: undefined\r\n//   }\r\n\r\n  \r\n\r\n//   componentDidMount() {\r\n//     console.log(this.props.cookies)\r\n//     //if (!user && this.props.cookies.user) setUser()\r\n//   }\r\n\r\n//   render() {\r\n//     <Component {...pageProps} user={user} setUser={setUser} cookie={cookie} setCookie={setCookie} removeCookie={removeCookie}/>\r\n//   }\r\n// }\r\n\r\n// MyApp.getInitialProps = async ({Component, ctx}) => {\r\n//   let pageProps = {}\r\n\r\n//   if (Component.getInitialProps) pageProps = await Component.getInitialProps(ctx)\r\n  \r\n//   return {pageProps: {...pageProps, session: ctx.req.session, sessionID: ctx.req.sessionID}}\r\n// }\r\n\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}