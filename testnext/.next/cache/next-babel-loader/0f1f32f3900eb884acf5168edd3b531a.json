{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\js\\\\testnext\\\\components\\\\LoginPage.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState } from \"react\";\nimport \"./LoginPage.scss\";\nimport { NoSsr } from \"@material-ui/core\";\n\nconst LoginPage = props => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState(0);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(0);\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(0);\n\n  const validUsername = () => username.length > 0 ? {\n    valid: true\n  } : {\n    err: \"Please enter a valid username (1 or more characters)\"\n  };\n\n  const validPassword = () => password.length > 3 ? {\n    valid: true\n  } : {\n    err: \"Please enter a valid username (4 or more characters)\"\n  };\n\n  const validInput = validUsername().valid && validPassword().valid;\n  const inputRefs = {};\n\n  const handleChange = event => {\n    const {\n      target: {\n        id,\n        value\n      }\n    } = event;\n    if (id === \"username\") setUsername(value);\n    if (id === \"password\") setPassword(value);\n  };\n\n  const focusNextInput = () => {\n    if (!validUsername().valid) inputRefs.username.focus();else if (!validPassword().valid) inputRefs.password.focus();\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") validInput ? props.login(username, password) : focusNextInput();\n  };\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n\n  return __jsx(\"div\", {\n    className: \"LoginPage\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(NoSsr, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" \", __jsx(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), \" \"), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    style: {\n      textAlign: \"center\",\n      margin: \"8px 0 30px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" TTM App Login \"), __jsx(TextField, {\n    id: \"username\",\n    inputRef: ref => {\n      inputRefs.username = ref;\n    },\n    label: \"Enter Username\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    autoComplete: \"username\",\n    autoFocus: true,\n    required: true,\n    onKeyDown: handleKeyDown,\n    onChange: handleChange,\n    style: {\n      backgroundColor: \"white\",\n      margin: \"5px\",\n      width: \"250px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(TextField, {\n    id: \"password\",\n    inputRef: ref => {\n      inputRefs.password = ref;\n    },\n    label: \"Enter Password\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    autoComplete: \"password\",\n    required: true,\n    onKeyDown: handleKeyDown,\n    onChange: handleChange,\n    InputProps: {\n      type: showPassword ? \"text\" : \"password\",\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, __jsx(IconButton, {\n        onClick: handleClickShowPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, showPassword ? __jsx(Visibility, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }) : __jsx(VisibilityOff, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })))\n    },\n    style: {\n      backgroundColor: \"white\",\n      margin: \"5px\",\n      width: \"250px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), __jsx(Button, {\n    id: \"login\",\n    color: \"primary\",\n    variant: \"contained\",\n    disabled: !validUsername().valid || !validPassword().valid,\n    onClick: () => props.login(username, password),\n    style: {\n      margin: \"8px 5px 5px 5px\",\n      width: \"250px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \" Login \")));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Code/js/testnext/components/LoginPage.js"],"names":["TextField","InputAdornment","LockOutlinedIcon","Typography","Avatar","Paper","IconButton","Visibility","VisibilityOff","Button","useState","NoSsr","LoginPage","props","username","setUsername","password","setPassword","showPassword","setShowPassword","validUsername","length","valid","err","validPassword","validInput","inputRefs","handleChange","event","target","id","value","focusNextInput","focus","handleKeyDown","key","login","handleClickShowPassword","display","flexDirection","alignItems","justifyContent","textAlign","margin","ref","backgroundColor","width","type","endAdornment"],"mappings":"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","sourcesContent":["import TextField from \"@material-ui/core/TextField\"\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Visibility from \"@material-ui/icons/Visibility\"\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport {useState} from \"react\"\r\nimport \"./LoginPage.scss\"\r\nimport { NoSsr } from \"@material-ui/core\"\r\n\r\nconst LoginPage = props => {\r\n  const [username, setUsername] = useState(0)\r\n  const [password, setPassword] = useState(0)\r\n  const [showPassword, setShowPassword] = useState(0)\r\n\r\n  const validUsername = () => username.length > 0\r\n    ? {valid: true}\r\n    : {err: \"Please enter a valid username (1 or more characters)\"}\r\n\r\n  const validPassword = () => password.length > 3\r\n    ? {valid: true}\r\n    : {err: \"Please enter a valid username (4 or more characters)\"}\r\n\r\n  const validInput = validUsername().valid && validPassword().valid\r\n\r\n  const inputRefs = {}\r\n\r\n  const handleChange = event => {\r\n    const { target: { id, value } } = event\r\n    if (id === \"username\") setUsername(value)\r\n    if (id === \"password\") setPassword(value)\r\n  }\r\n\r\n  const focusNextInput = () => {\r\n    if (!validUsername().valid) inputRefs.username.focus()\r\n    else if (!validPassword().valid) inputRefs.password.focus()\r\n  }\r\n\r\n  const handleKeyDown = event => { if (event.key === \"Enter\")\r\n    validInput ? props.login(username, password) : focusNextInput()\r\n  }\r\n\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword)\r\n\r\n  return <div className=\"LoginPage\" style={{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }}>\r\n    <NoSsr>\r\n      <Avatar> <LockOutlinedIcon/> </Avatar>\r\n\r\n      <Typography\r\n        component=\"h1\"\r\n        variant=\"h5\"\r\n        style={{ textAlign: \"center\", margin: \"8px 0 30px 0\" }}\r\n      > TTM App Login </Typography>\r\n\r\n      <TextField\r\n        id=\"username\"\r\n        inputRef={ref => { inputRefs.username = ref }}\r\n        label=\"Enter Username\"\r\n        variant=\"outlined\"\r\n        margin=\"dense\"\r\n        autoComplete=\"username\"\r\n        autoFocus\r\n        required\r\n        onKeyDown={handleKeyDown}\r\n        onChange={handleChange}\r\n        style={{ backgroundColor: \"white\", margin:\"5px\", width: \"250px\" }}\r\n      />\r\n\r\n      <TextField\r\n        id=\"password\"\r\n        inputRef={ref => { inputRefs.password = ref }}\r\n        label=\"Enter Password\"\r\n        variant=\"outlined\"\r\n        margin=\"dense\"\r\n        autoComplete=\"password\"\r\n        required\r\n        onKeyDown={handleKeyDown}\r\n        onChange={handleChange}\r\n        InputProps={{ type: showPassword ? \"text\" : \"password\",\r\n          endAdornment: <InputAdornment position=\"end\">\r\n            <IconButton onClick={handleClickShowPassword}>\r\n              {showPassword ? <Visibility/>: <VisibilityOff/>}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }}\r\n        style={{ backgroundColor: \"white\", margin:\"5px\", width: \"250px\" }}\r\n      />\r\n      \r\n      <Button\r\n        id=\"login\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        disabled={!validUsername().valid || !validPassword().valid}\r\n        onClick={() => props.login(username, password)}\r\n        style={{ margin:\"8px 5px 5px 5px\", width: \"250px\" }}\r\n      > Login </Button>\r\n\r\n    </NoSsr>\r\n  </div>\r\n}\r\n\r\nexport default LoginPage"]},"metadata":{},"sourceType":"module"}